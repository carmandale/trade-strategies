{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(chmod:*)",
      "Bash(git init:*)",
      "Bash(git branch:*)",
      "Bash(git remote add:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(uv venv:*)",
      "Bash(source:*)",
      "Bash(uv pip install:*)",
      "Bash(python:*)",
      "Bash(gh pr list:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue create:*)",
      "Bash(rm:*)",
      "Bash(playwright install:*)",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Bash(cp:*)",
      "Bash(gh issue comment:*)",
      "Bash(gh issue close:*)",
      "Bash(afplay:*)",
      "mcp__ide__executeCode",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" status)",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" add src/)",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" add .claude/settings.local.json)",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" commit -m \"feat: integrate React frontend components for trading strategies #3\n\n- Add SPYSpreadStrategiesApp main component with real-time price updates\n- Implement HeaderSection with live market data display\n- Add comprehensive TypeScript interfaces for trading data structures\n- Include InputControlsSection, StrikePriceConfigSection, and AnalysisAndChartSection components\n- Set up proper React 19 + TypeScript + Tailwind CSS + Framer Motion stack\n- Integrate professional options trading calculations (Bull Call, Iron Condor, Butterfly)\n- Update Claude settings for development workflow support\n\n🤖 Generated with Claude Code (https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" commit -m \"chore: update Claude Code settings for React development workflow\n\n- Add additional git command permissions for autonomous cleanup\n- Support development workflow patterns\n\n🤖 Generated with Claude Code (https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(npm install)",
      "Bash(gh issue view:*)",
      "Bash(npm install:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run dev:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(npm run:*)",
      "Bash(tsc --noEmit)",
      "Bash(npx tsc:*)",
      "Bash(true)",
      "Bash(./start.sh:*)",
      "Bash(timeout:*)",
      "Bash(uv run:*)",
      "Bash(kill:*)",
      "Bash(uv add:*)",
      "Bash(alembic revision:*)",
      "Bash(touch:*)",
      "Bash(npm test)",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" add src/components/__tests__/StrategyCharts.test.tsx)",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" commit -m \"test: add comprehensive tests for strategy visualization components #6\n\n- Create StrategyCharts.test.tsx with 60+ test cases covering all visualization components\n- Add tests for EquityCurveChart component (equity curve line chart based on Python matplotlib logic)\n- Add tests for PLHistogramChart component (profit/loss distribution histogram)\n- Add tests for PerformanceMetrics component (comprehensive strategy performance display)\n- Add tests for StrategyVisualization dashboard component (complete visualization suite)\n- Include integration tests for chart consistency, accessibility, and responsive behavior\n- Cover loading states, error handling, data formatting, and user interactions\n- Test currency formatting, negative value handling, and responsive layouts\n- Include accessibility compliance and export functionality testing\n\n🤖 Generated with Claude Code (https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" commit -m \"chore: update Claude settings for git workflow automation #6\n\n- Add git command permissions for automated staging and committing\n- Support visualization development workflow\n\n🤖 Generated with Claude Code (https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" commit -m \"chore: update Claude settings for component development #6\n\n🤖 Generated with Claude Code (https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" add src/components/EquityCurveChart.tsx)",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" commit -m \"feat: create EquityCurveChart component with Recharts #6\n\n- Implement comprehensive equity curve visualization matching Python matplotlib logic\n- Add line chart with cumulative P/L over time and 7-day moving average trend line\n- Include interactive tooltips showing date, cumulative P/L, and daily P/L with proper formatting\n- Support zoom controls (zoom in/out/reset) and brush selection for detailed analysis\n- Display max drawdown calculation and final P/L with appropriate color coding\n- Handle loading states and empty data states with proper UI feedback\n- Use responsive container for mobile and desktop compatibility\n- Add chart legends and data point information footer\n- Include zero reference line and proper axis formatting ($Xk format)\n- Support dark mode with consistent theming throughout\n\n🤖 Generated with Claude Code (https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" commit -m \"chore: update Claude settings for development workflow #6\n\n🤖 Generated with Claude Code (https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" add src/components/PLHistogramChart.tsx)",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" commit -m \"feat: create PLHistogramChart component with distribution analysis #6\n\n- Implement P/L histogram visualization matching Python matplotlib logic\n- Add bar chart showing profit/loss distribution with color-coded ranges (green for profits, red for losses)\n- Include custom tooltips with range, trade count, and midpoint information\n- Calculate and display distribution statistics (total trades, win rate, most common range)\n- Support optional statistics panel with detailed breakdown\n- Use responsive container for cross-device compatibility\n- Handle loading and empty states with appropriate UI feedback\n- Add color legend distinguishing large/small profits and losses\n- Include proper axis labeling and formatting for financial data\n- Support dark mode theming throughout component\n\n🤖 Generated with Claude Code (https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" commit -m \"chore: update Claude settings for component development workflow #6\n\n🤖 Generated with Claude Code (https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
<<<<<<< Updated upstream
      "Bash(mv:*)"
=======
      "Bash(npm test:*)",
      "Bash(git -C \"/Users/dalecarman/Groove Jones Dropbox/Dale Carman/Projects/dev/trade-strategies\" stash push -m \"Stashing temporary changes while completing Task 3\")"
>>>>>>> Stashed changes
    ],
    "deny": []
  }
}